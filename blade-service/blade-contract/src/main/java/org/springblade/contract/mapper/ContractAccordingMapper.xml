<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.springblade.contract.mapper.ContractAccordingMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="accordingResultMap" type="org.springblade.contract.entity.ContractAccordingEntity">
        <result column="id" property="id"/>
        <result column="file_id" property="fileId"/>
        <result column="according_name" property="accordingName"/>
        <result column="synch_date" property="synchDate"/>
        <result column="code" property="code"/>
        <result column="theme_context" property="themeContext"/>
        <result column="document_type" property="documentType"/>
        <result column="use_status" property="useStatus"/>
        <result column="according_address" property="accordingAddress"/>
        <result column="status" property="status"/>
        <result column="is_reused" property="isReused"/>
        <result column="contract_id" property="contractId"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_dept" property="createDept"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="baseColumnList">
        id,
        file_id,
        code,
        according_name,
        synch_date,
        document_type,
        theme_context,
        use_status,
        according_address,
        is_reused,
        contract_id,
        status,
        is_deleted,
        create_user,
        create_time,
        update_user,
        update_time,
        create_dept
    </sql>
    <!-- 分页 -->
    <select id="pageList" resultMap="accordingResultMap">
        SELECT
            <include refid="baseColumnList"></include>
        FROM contract_according
        WHERE is_deleted = 0
        <if test="according.code != null and according.code != ''">
            AND code like concat('%', #{according.code}, '%')
        </if>
        <if test="according.accordingName != null and according.accordingName != ''">
            AND according_name like concat('%', #{according.accordingName}, '%')
        </if>
        <if test="according.synchDateString != null and according.synchDateString != ''">
            AND synch_date like concat('%', #{according.synchDateString}, '%')
        </if>
        <if test="according.useStatus != null and according.useStatus != ''">
            AND use_status = #{according.useStatus}
        </if>
    </select>
    <select id="selectByContractIds" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM contract_according_setting
        WHERE
        contract_id = #{id}
    </select>
    <!-- 根据依据文件编号查询是否已存在的依据 -->
    <select id="selectByIds" resultMap="accordingResultMap">
        SELECT
        <include refid="baseColumnList"> </include>
        FROM contract_according
        WHERE is_deleted = 0
        AND
        id IN (SELECT c.contract_according_id FROM contract_according_setting c WHERE c.contract_id =#{contractId})
    </select>
<!-- 根据依据文件编号查询是否已存在的依据 -->
    <select id="selectByFileId" resultMap="accordingResultMap">
        SELECT
        <include refid="baseColumnList"> </include>
        FROM contract_according
        WHERE is_deleted = 0
        <foreach collection="acList" item="file_id" index="index" open="and file_id in ("
                 separator="," close=")">
            #{file_id}
        </foreach>
    </select>
    <!--根据合同id删除依据关联信息-->
    <delete id="deleteAccording" parameterType="java.lang.Long">
       DELETE FROM
       contract_according_setting
       WHERE
       contract_id=#{id}
    </delete>

    <select id="findListByCodes" resultMap="accordingResultMap">
        SELECT
        <include refid="baseColumnList"></include>
        FROM contract_according
        where
        is_deleted = 0
        and
        code in
        <foreach collection="codes" item="code" index="index" open="(" close=")" separator=",">
            #{code}
        </foreach>
    </select>

    <select id="findListByCode" resultMap="accordingResultMap">
    SELECT
    <include refid="baseColumnList"></include>
    FROM contract_according
    where
    is_deleted = 0
    and
    code = #{code}
    </select>


    <!--保存关联依据-->
    <insert id="saveByBatchDraft">
        insert into contract_according_setting
        (contract_id,
        contract_according_id)
        values
        <foreach collection="contractIds" item="contractId" index="index" open="" close="" separator=",">
            (#{contractId},
            #{accordingId})
        </foreach>
    </insert>



    <delete id="clearDate">
        DELETE
        FROM contract_counterpart
        WHERE id NOT IN (
            SELECT t.max_id
            FROM (SELECT max(id) AS max_id from contract_according group by file_id) as t
        );
    </delete>
    <delete id="clearEmpty">
        DELETE
        FROM contract_according
        WHERE file_id IN (NULL,'null','');
    </delete>
</mapper>
